apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "coda.fullname" . }}
  labels:
    {{- include "coda.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  podManagementPolicy: "Parallel"
  serviceName: {{ include "coda.fullname" . }}
  selector:
    matchLabels:
      {{- include "coda.selectorLabels" . | nindent 6 }}
  template:
    metadata:
    {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "coda.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "coda.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      hostNetwork: true
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
          - bash
          - -c
          - {{ .Values.bashCommand }}
          ports:
            - name: upnp
              hostPort: 8303
              containerPort: 8303
              protocol: TCP
            - name: p2p
              hostPort: 8302
              containerPort: 8302
              protocol: TCP
            - name: graphql
              containerPort: 3085
              protocol: TCP
            - name: http
              hostPort: 80
              containerPort: 80
              protocol: TCP
            - name: https
              hostPort: 443
              containerPort: 443
              protocol: TCP
          env:
          {{- toYaml .Values.env | nindent 10 }}
          # livenessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: http
          resources:
          {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          - name: chaindata
            mountPath: /root/.coda-config
          {{- toYaml .Values.volumeMounts | nindent 10 }}
      volumes:
      {{- toYaml .Values.volumes | nindent 6 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
  volumeClaimTemplates:
  - metadata:
      name: chaindata
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: {{ .Values.persistence.storage }}
